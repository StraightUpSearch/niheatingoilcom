<?php
/**
 * NI Heating Oil Theme - Functions
 *
 * This theme integrates a React/Vite application into WordPress.
 * The Vite build outputs assets to /dist/public/ which are enqueued here.
 *
 * @package NIHeatingOil
 * @version 1.0.0
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

/**
 * Theme Setup
 */
function ni_heating_oil_setup() {
    // Add theme support
    add_theme_support('title-tag');
    add_theme_support('post-thumbnails');
    add_theme_support('html5', array(
        'search-form',
        'comment-form',
        'comment-list',
        'gallery',
        'caption',
    ));

    // Remove unnecessary WordPress features for React app
    remove_action('wp_head', 'print_emoji_detection_script', 7);
    remove_action('wp_print_styles', 'print_emoji_styles');
}
add_action('after_setup_theme', 'ni_heating_oil_setup');

/**
 * Get Vite Manifest
 * Reads the manifest.json file generated by Vite build
 */
function ni_heating_oil_get_vite_manifest() {
    static $manifest = null;

    if ($manifest !== null) {
        return $manifest;
    }

    $manifest_path = get_template_directory() . '/dist/public/.vite/manifest.json';

    if (!file_exists($manifest_path)) {
        error_log('Vite manifest not found at: ' . $manifest_path);
        error_log('Please run: npm run build');
        return false;
    }

    $manifest_content = file_get_contents($manifest_path);
    $manifest = json_decode($manifest_content, true);

    if (!$manifest) {
        error_log('Failed to parse Vite manifest');
        return false;
    }

    return $manifest;
}

/**
 * Enqueue Vite Development Assets
 * Loads Vite dev server for hot module replacement during development
 */
function ni_heating_oil_enqueue_dev_assets() {
    // Check if Vite dev server is running (default port 5000)
    $vite_dev_server = 'http://localhost:5000';

    // Enqueue Vite client for HMR
    wp_enqueue_script(
        'ni-heating-oil-vite-client',
        $vite_dev_server . '/@vite/client',
        array(),
        null,
        false
    );

    // Enqueue main React entry point
    wp_enqueue_script(
        'ni-heating-oil-main',
        $vite_dev_server . '/src/main.tsx',
        array('ni-heating-oil-vite-client'),
        null,
        true
    );

    // Add type="module" attribute
    add_filter('script_loader_tag', function($tag, $handle) {
        if (in_array($handle, array('ni-heating-oil-vite-client', 'ni-heating-oil-main'))) {
            $tag = str_replace(' src=', ' type="module" src=', $tag);
        }
        return $tag;
    }, 10, 2);
}

/**
 * Enqueue Vite Production Assets
 * Loads built and optimized assets from /dist/public/
 */
function ni_heating_oil_enqueue_prod_assets() {
    $manifest = ni_heating_oil_get_vite_manifest();

    if (!$manifest) {
        $error_msg = 'ERROR: Vite build not found. Run: npx vite build';
        error_log($error_msg);
        if (current_user_can('administrator')) {
            echo '<!-- ' . $error_msg . ' -->';
            echo '<div style="padding:20px;background:#fee;border:2px solid #c33;margin:20px;font-family:monospace;">';
            echo '<h2>⚠️ Build Error</h2>';
            echo '<p>Vite manifest not found. Please run: <code>npx vite build</code></p>';
            echo '<p>Looking for: ' . get_template_directory() . '/dist/public/.vite/manifest.json</p>';
            echo '</div>';
        }
        return;
    }

    $dist_uri = get_template_directory_uri() . '/dist/public';

    // Find the main entry point in manifest
    // Vite 5.x uses 'index.html' as entry key
    $main_entry = isset($manifest['index.html']) ? $manifest['index.html'] :
                  (isset($manifest['src/main.tsx']) ? $manifest['src/main.tsx'] : null);

    if (!$main_entry) {
        error_log('Main entry not found in Vite manifest');
        return;
    }

    // Enqueue main CSS if present
    if (isset($main_entry['css'])) {
        foreach ($main_entry['css'] as $index => $css_file) {
            wp_enqueue_style(
                'ni-heating-oil-main-' . $index,
                $dist_uri . '/' . $css_file,
                array(),
                null
            );
        }
    }

    // Enqueue main JavaScript
    wp_enqueue_script(
        'ni-heating-oil-main',
        $dist_uri . '/' . $main_entry['file'],
        array(),
        null,
        true
    );

    // Add type="module" attribute
    add_filter('script_loader_tag', function($tag, $handle) {
        if ($handle === 'ni-heating-oil-main') {
            $tag = str_replace(' src=', ' type="module" src=', $tag);
        }
        return $tag;
    }, 10, 2);

    // Enqueue any dynamic imports (chunks)
    if (isset($main_entry['dynamicImports'])) {
        foreach ($main_entry['dynamicImports'] as $import) {
            if (isset($manifest[$import])) {
                $chunk = $manifest[$import];
                wp_enqueue_script(
                    'ni-heating-oil-chunk-' . sanitize_title($import),
                    $dist_uri . '/' . $chunk['file'],
                    array(),
                    null,
                    true
                );
            }
        }
    }
}

/**
 * Enqueue Assets (Development or Production)
 */
function ni_heating_oil_enqueue_assets() {
    // ALWAYS use built assets for now
    // Dev mode is disabled because port 5000 is used by Express backend, not Vite
    // To enable Vite dev mode later, uncomment the dev detection below

    /*
    // Check if we're in development mode
    $is_dev = defined('WP_DEBUG') && WP_DEBUG && defined('WP_ENVIRONMENT_TYPE') && WP_ENVIRONMENT_TYPE === 'local';

    // Check if Vite dev server is running on a DIFFERENT port (e.g., 5173)
    if ($is_dev && ini_get('allow_url_fopen') && @fsockopen('localhost', 5173, $errno, $errstr, 1)) {
        ni_heating_oil_enqueue_dev_assets();
    } else {
        ni_heating_oil_enqueue_prod_assets();
    }
    */

    // Use built assets
    ni_heating_oil_enqueue_prod_assets();

    // Pass WordPress data to React app
    wp_localize_script(
        'ni-heating-oil-main',
        'wpData',
        array(
            'ajaxUrl' => admin_url('admin-ajax.php'),
            'restUrl' => esc_url_raw(rest_url()),
            'restNonce' => wp_create_nonce('wp_rest'),
            'siteUrl' => get_site_url(),
            'homeUrl' => get_home_url(),
            'themePath' => get_template_directory_uri(),
            'isLoggedIn' => is_user_logged_in(),
            'currentUser' => is_user_logged_in() ? array(
                'id' => get_current_user_id(),
                'name' => wp_get_current_user()->display_name,
                'email' => wp_get_current_user()->user_email,
            ) : null,
        )
    );
}
add_action('wp_enqueue_scripts', 'ni_heating_oil_enqueue_assets');

/**
 * Register WordPress REST API endpoints for the app
 * These will proxy to your Express backend or handle directly in WordPress
 */
function ni_heating_oil_register_api_routes() {
    // Example: Proxy API endpoint
    register_rest_route('ni-heating-oil/v1', '/proxy/(?P<path>.*)', array(
        'methods' => 'GET,POST,PUT,DELETE',
        'callback' => 'ni_heating_oil_proxy_api',
        'permission_callback' => '__return_true', // Adjust as needed
    ));
}
add_action('rest_api_init', 'ni_heating_oil_register_api_routes');

/**
 * Get default/fallback pricing data when backend is unavailable
 */
function ni_heating_oil_get_default_prices() {
    return array(
        array(
            'id' => 1,
            'supplierId' => 1,
            'volume' => 500,
            'price' => '499.50',
            'pricePerLitre' => '0.999',
            'includesVat' => true,
            'postcode' => 'ALL',
            'isDefault' => true,
            'createdAt' => current_time('mysql'),
            'supplier' => array(
                'id' => 1,
                'name' => 'Budget Heating Oil NI',
                'location' => 'Northern Ireland Wide',
                'phone' => '028 9000 0000',
                'website' => 'https://niheatingoil.com',
                'coverageAreas' => 'ALL',
                'rating' => '4.5',
                'reviewCount' => 150,
                'isActive' => 1,
                'isVerified' => true,
            )
        ),
        array(
            'id' => 2,
            'supplierId' => 2,
            'volume' => 500,
            'price' => '509.50',
            'pricePerLitre' => '1.019',
            'includesVat' => true,
            'postcode' => 'ALL',
            'isDefault' => true,
            'createdAt' => current_time('mysql'),
            'supplier' => array(
                'id' => 2,
                'name' => 'Premium Fuel Supplies',
                'location' => 'Belfast & Surrounding Areas',
                'phone' => '028 9000 0001',
                'website' => 'https://niheatingoil.com',
                'coverageAreas' => 'BT1 to BT29',
                'rating' => '4.7',
                'reviewCount' => 200,
                'isActive' => 1,
                'isVerified' => true,
            )
        ),
        array(
            'id' => 3,
            'supplierId' => 3,
            'volume' => 500,
            'price' => '519.00',
            'pricePerLitre' => '1.038',
            'includesVat' => true,
            'postcode' => 'ALL',
            'isDefault' => true,
            'createdAt' => current_time('mysql'),
            'supplier' => array(
                'id' => 3,
                'name' => 'Express Oil Delivery',
                'location' => 'County Antrim',
                'phone' => '028 9000 0002',
                'website' => 'https://niheatingoil.com',
                'coverageAreas' => 'County Antrim',
                'rating' => '4.3',
                'reviewCount' => 89,
                'isActive' => 1,
                'isVerified' => true,
            )
        ),
        array(
            'id' => 4,
            'supplierId' => 4,
            'volume' => 500,
            'price' => '524.99',
            'pricePerLitre' => '1.050',
            'includesVat' => true,
            'postcode' => 'ALL',
            'isDefault' => true,
            'createdAt' => current_time('mysql'),
            'supplier' => array(
                'id' => 4,
                'name' => 'County Down Oil Services',
                'location' => 'County Down',
                'phone' => '028 9000 0003',
                'website' => 'https://niheatingoil.com',
                'coverageAreas' => 'County Down',
                'rating' => '4.6',
                'reviewCount' => 134,
                'isActive' => 1,
                'isVerified' => true,
            )
        ),
        array(
            'id' => 5,
            'supplierId' => 5,
            'volume' => 500,
            'price' => '529.50',
            'pricePerLitre' => '1.059',
            'includesVat' => true,
            'postcode' => 'ALL',
            'isDefault' => true,
            'createdAt' => current_time('mysql'),
            'supplier' => array(
                'id' => 5,
                'name' => 'North Coast Heating',
                'location' => 'Causeway Coast & Glens',
                'phone' => '028 9000 0004',
                'website' => 'https://niheatingoil.com',
                'coverageAreas' => 'BT51 to BT57',
                'rating' => '4.4',
                'reviewCount' => 67,
                'isActive' => 1,
                'isVerified' => true,
            )
        )
    );
}

/**
 * Intercept /api/* requests and proxy them to Express backend
 */
function ni_heating_oil_api_proxy() {
    $request_uri = $_SERVER['REQUEST_URI'];

    // Only handle /api/* requests
    if (strpos($request_uri, '/api/') !== 0) {
        return;
    }

    // Express backend URL
    $backend_url = 'http://localhost:5000';
    $api_path = $request_uri;

    // Build full URL
    $url = $backend_url . $api_path;

    // Prepare request arguments
    $method = $_SERVER['REQUEST_METHOD'];
    $args = array(
        'method' => $method,
        'headers' => array(
            'Content-Type' => 'application/json',
        ),
        'timeout' => 5, // Reduced timeout for faster fallback
        'sslverify' => false,
    );

    // Add body for POST/PUT/PATCH requests
    if (in_array($method, array('POST', 'PUT', 'PATCH'))) {
        $args['body'] = file_get_contents('php://input');
    }

    // Make request to Express backend
    $response = wp_remote_request($url, $args);

    // If backend is unavailable, serve default data for specific endpoints
    if (is_wp_error($response)) {
        // Handle /api/prices endpoint with default data
        if (strpos($request_uri, '/api/prices') === 0 && !strpos($request_uri, '/api/prices/stats')) {
            status_header(200);
            header('Content-Type: application/json');
            echo json_encode(ni_heating_oil_get_default_prices());
            exit;
        }

        // Handle /api/suppliers endpoint with default supplier list
        if (strpos($request_uri, '/api/suppliers') === 0) {
            $default_prices = ni_heating_oil_get_default_prices();
            $suppliers = array();
            foreach ($default_prices as $price) {
                $suppliers[] = $price['supplier'];
            }
            status_header(200);
            header('Content-Type: application/json');
            echo json_encode($suppliers);
            exit;
        }

        // For other endpoints, return appropriate error
        status_header(503);
        header('Content-Type: application/json');
        echo json_encode(array(
            'error' => 'Service temporarily unavailable',
            'message' => 'Unable to connect to backend services. Please try again later.'
        ));
        exit;
    }

    // Get response details
    $status = wp_remote_retrieve_response_code($response);
    $body = wp_remote_retrieve_body($response);
    $headers = wp_remote_retrieve_headers($response);

    // Set response status
    status_header($status);

    // Forward headers
    if (isset($headers['content-type'])) {
        header('Content-Type: ' . $headers['content-type']);
    }

    // Output response body
    echo $body;
    exit;
}
add_action('init', 'ni_heating_oil_api_proxy', 1);

/**
 * Proxy API requests to Express backend
 * This allows the React app to use WordPress URLs while backend runs separately
 */
function ni_heating_oil_proxy_api($request) {
    $path = $request->get_param('path');
    $method = $request->get_method();

    // Your Express backend URL (update this to match your setup)
    $backend_url = defined('NI_HEATING_OIL_API_URL')
        ? NI_HEATING_OIL_API_URL
        : 'http://localhost:5000';

    $url = $backend_url . '/api/' . $path;

    $args = array(
        'method' => $method,
        'headers' => array(
            'Content-Type' => 'application/json',
        ),
        'timeout' => 30,
    );

    // Add body for POST/PUT requests
    if (in_array($method, array('POST', 'PUT', 'PATCH'))) {
        $args['body'] = json_encode($request->get_json_params());
    }

    $response = wp_remote_request($url, $args);

    if (is_wp_error($response)) {
        return new WP_Error('api_error', $response->get_error_message(), array('status' => 500));
    }

    $body = wp_remote_retrieve_body($response);
    $status = wp_remote_retrieve_response_code($response);

    return new WP_REST_Response(json_decode($body), $status);
}

/**
 * Remove admin bar for cleaner frontend
 */
add_filter('show_admin_bar', '__return_false');

/**
 * Custom WordPress REST API authentication using nonces
 */
function ni_heating_oil_rest_auth() {
    // Allow REST API access with nonce verification
    add_filter('rest_authentication_errors', function($result) {
        if (!empty($result)) {
            return $result;
        }

        if (!is_user_logged_in()) {
            return true; // Allow public endpoints
        }

        return $result;
    });
}
add_action('init', 'ni_heating_oil_rest_auth');

/**
 * Security: Remove WordPress version from head
 */
remove_action('wp_head', 'wp_generator');

/**
 * Allow SVG uploads (for favicon/logo)
 */
function ni_heating_oil_allow_svg_upload($mimes) {
    $mimes['svg'] = 'image/svg+xml';
    return $mimes;
}
add_filter('upload_mimes', 'ni_heating_oil_allow_svg_upload');

/**
 * Clean up WordPress head
 */
function ni_heating_oil_cleanup_head() {
    remove_action('wp_head', 'rsd_link');
    remove_action('wp_head', 'wlwmanifest_link');
    remove_action('wp_head', 'wp_shortlink_wp_head');
    remove_action('wp_head', 'adjacent_posts_rel_link_wp_head', 10);
}
add_action('init', 'ni_heating_oil_cleanup_head');

/**
 * Add CORS headers if needed for API calls
 */
function ni_heating_oil_add_cors_headers() {
    if (defined('NI_HEATING_OIL_ENABLE_CORS') && NI_HEATING_OIL_ENABLE_CORS) {
        header('Access-Control-Allow-Origin: *');
        header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');
        header('Access-Control-Allow-Headers: Content-Type, Authorization, X-WP-Nonce');
    }
}
add_action('rest_api_init', 'ni_heating_oil_add_cors_headers');
